name: Run test

on:
  workflow_dispatch:

jobs:
  run-tests:
    runs-on: ubuntu-latest
    env:
      SOLUTION_PATH: ${{ github.workspace }}/TAAdvance.sln
      PROJECT_PATH: ${{ github.workspace }}/TAF/TAF.csproj
      ALLURE_RESULTS_PATH: ${{ github.workspace }}/TAF/bin/Debug/net8.0/allure-results
    
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Install the .NET
      - name: Install .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      # Install dependencies such as Google Chrome for UI testing
      - name: Install or update Google Chrome
        run: |
          if google-chrome --version; then
            echo "Google Chrome is already installed. Version: $(google-chrome --version)"
          else
            echo "Google Chrome is not installed. Installing the latest stable version..."
            sudo apt-get update
            sudo apt-get install -y wget apt-transport-https
            sudo apt-get install -y fonts-liberation libasound2 libatk-bridge2.0-0 libatk1.0-0 libatspi2.0-0 libcairo2 libcups2 libdrm2 libgbm1 libgtk-3-0 libpango-1.0-0 libvulkan1 libx11-6 libxcomposite1 libxdamage1 libxext6 libxfixes3 libxkbcommon0 libxrandr2 xdg-utils libnspr4 libnss3
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb
            sudo apt-get -f install
          fi
        
        # Set up variables for tests
      - name: Set up variables
        run: |
          echo "EMAIL=${{ secrets.EMAIL }}" >> $GITHUB_ENV
          echo "PASSWORD=${{ secrets.PASSWORD }}" >> $GITHUB_ENV
          echo "URL=${{ vars.URL }}" >> $GITHUB_ENV
          echo "RUN_TYPE=Remote" >> $GITHUB_ENV
      
      # Execute all unit tests in the solution
      - name: Execute tests
        run: dotnet test
      
      # Load test Allure report history to gh-pages branch
      - name: Load test report history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages
      
      # Generate Allure report
      - name: Build test report
        uses: simple-elf/allure-report-action@v1.7
        if: always()
        with:
          gh_pages: gh-pages
          allure_history: allure-history
          allure_results: ${{ env.ALLURE_RESULTS_PATH }}
      
      # Deploy Allure report to GitHub Pages
      - name: Publish test report
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-history